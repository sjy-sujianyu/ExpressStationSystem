#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpressStationSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Express")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAddressBook(AddressBook instance);
    partial void UpdateAddressBook(AddressBook instance);
    partial void DeleteAddressBook(AddressBook instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertCommission(Commission instance);
    partial void UpdateCommission(Commission instance);
    partial void DeleteCommission(Commission instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertError(Error instance);
    partial void UpdateError(Error instance);
    partial void DeleteError(Error instance);
    partial void InsertLeave(Leave instance);
    partial void UpdateLeave(Leave instance);
    partial void DeleteLeave(Leave instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertMoney(Money instance);
    partial void UpdateMoney(Money instance);
    partial void DeleteMoney(Money instance);
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertPath(Path instance);
    partial void UpdatePath(Path instance);
    partial void DeletePath(Path instance);
    partial void InsertPickUp(PickUp instance);
    partial void UpdatePickUp(PickUp instance);
    partial void DeletePickUp(PickUp instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ExpressConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AddressBook> AddressBook
		{
			get
			{
				return this.GetTable<AddressBook>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branch
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Commission> Commission
		{
			get
			{
				return this.GetTable<Commission>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Delivery
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<Error> Error
		{
			get
			{
				return this.GetTable<Error>();
			}
		}
		
		public System.Data.Linq.Table<Leave> Leave
		{
			get
			{
				return this.GetTable<Leave>();
			}
		}
		
		public System.Data.Linq.Table<Login> Login
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Member> Member
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Money> Money
		{
			get
			{
				return this.GetTable<Money>();
			}
		}
		
		public System.Data.Linq.Table<Package> Package
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<Path> Path
		{
			get
			{
				return this.GetTable<Path>();
			}
		}
		
		public System.Data.Linq.Table<PickUp> PickUp
		{
			get
			{
				return this.GetTable<PickUp>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfer
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicle
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressBook")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AddressBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _aId;
		
		private string _phone;
		
		private string _name;
		
		private string _province;
		
		private string _city;
		
		private string _street;
		
		private string _account;
		
		private bool _isDelete;
		
		private EntitySet<Package> _Package;
		
		private EntitySet<Package> _Package1;
		
		private EntityRef<Login> _Login;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaIdChanging(int value);
    partial void OnaIdChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public AddressBook()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int aId
		{
			get
			{
				return this._aId;
			}
			set
			{
				if ((this._aId != value))
				{
					this.OnaIdChanging(value);
					this.SendPropertyChanging();
					this._aId = value;
					this.SendPropertyChanged("aId");
					this.OnaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_Package", Storage="_Package", ThisKey="aId", OtherKey="sendId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Package> Package
		{
			get
			{
				if ((this.serializing 
							&& (this._Package.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Package;
			}
			set
			{
				this._Package.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_Package1", Storage="_Package1", ThisKey="aId", OtherKey="receiverId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Package> Package1
		{
			get
			{
				if ((this.serializing 
							&& (this._Package1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Package1;
			}
			set
			{
				this._Package1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_AddressBook", Storage="_Login", ThisKey="account", OtherKey="account", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.AddressBook.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.AddressBook.Add(this);
						this._account = value.account;
					}
					else
					{
						this._account = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Package(Package entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook = this;
		}
		
		private void detach_Package(Package entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook = null;
		}
		
		private void attach_Package1(Package entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook1 = this;
		}
		
		private void detach_Package1(Package entity)
		{
			this.SendPropertyChanging();
			entity.AddressBook1 = null;
		}
		
		private void Initialize()
		{
			this._Package = new EntitySet<Package>(new Action<Package>(this.attach_Package), new Action<Package>(this.detach_Package));
			this._Package1 = new EntitySet<Package>(new Action<Package>(this.attach_Package1), new Action<Package>(this.detach_Package1));
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bId;
		
		private string _province;
		
		private string _city;
		
		private string _street;
		
		private string _name;
		
		private EntitySet<Path> _Path;
		
		private EntitySet<Path> _Path1;
		
		private EntitySet<Path> _Path2;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbIdChanging(int value);
    partial void OnbIdChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Branch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int bId
		{
			get
			{
				return this._bId;
			}
			set
			{
				if ((this._bId != value))
				{
					this.OnbIdChanging(value);
					this.SendPropertyChanging();
					this._bId = value;
					this.SendPropertyChanged("bId");
					this.OnbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path", Storage="_Path", ThisKey="bId", OtherKey="srcId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Path> Path
		{
			get
			{
				if ((this.serializing 
							&& (this._Path.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Path;
			}
			set
			{
				this._Path.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path1", Storage="_Path1", ThisKey="bId", OtherKey="destId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Path> Path1
		{
			get
			{
				if ((this.serializing 
							&& (this._Path1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Path1;
			}
			set
			{
				this._Path1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path2", Storage="_Path2", ThisKey="bId", OtherKey="curId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Path> Path2
		{
			get
			{
				if ((this.serializing 
							&& (this._Path2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Path2;
			}
			set
			{
				this._Path2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Path1(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = this;
		}
		
		private void detach_Path1(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = null;
		}
		
		private void attach_Path2(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch2 = this;
		}
		
		private void detach_Path2(Path entity)
		{
			this.SendPropertyChanging();
			entity.Branch2 = null;
		}
		
		private void Initialize()
		{
			this._Path = new EntitySet<Path>(new Action<Path>(this.attach_Path), new Action<Path>(this.detach_Path));
			this._Path1 = new EntitySet<Path>(new Action<Path>(this.attach_Path1), new Action<Path>(this.detach_Path1));
			this._Path2 = new EntitySet<Path>(new Action<Path>(this.attach_Path2), new Action<Path>(this.detach_Path2));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Commission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cId;
		
		private decimal _pickUpValue;
		
		private decimal _deliveryValue;
		
		private decimal _transferValue;
		
		private System.DateTime _time;
		
		private string _person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncIdChanging(int value);
    partial void OncIdChanged();
    partial void OnpickUpValueChanging(decimal value);
    partial void OnpickUpValueChanged();
    partial void OndeliveryValueChanging(decimal value);
    partial void OndeliveryValueChanged();
    partial void OntransferValueChanging(decimal value);
    partial void OntransferValueChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnpersonChanging(string value);
    partial void OnpersonChanged();
    #endregion
		
		public Commission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int cId
		{
			get
			{
				return this._cId;
			}
			set
			{
				if ((this._cId != value))
				{
					this.OncIdChanging(value);
					this.SendPropertyChanging();
					this._cId = value;
					this.SendPropertyChanged("cId");
					this.OncIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pickUpValue", DbType="Decimal(10,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public decimal pickUpValue
		{
			get
			{
				return this._pickUpValue;
			}
			set
			{
				if ((this._pickUpValue != value))
				{
					this.OnpickUpValueChanging(value);
					this.SendPropertyChanging();
					this._pickUpValue = value;
					this.SendPropertyChanged("pickUpValue");
					this.OnpickUpValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deliveryValue", DbType="Decimal(10,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal deliveryValue
		{
			get
			{
				return this._deliveryValue;
			}
			set
			{
				if ((this._deliveryValue != value))
				{
					this.OndeliveryValueChanging(value);
					this.SendPropertyChanging();
					this._deliveryValue = value;
					this.SendPropertyChanged("deliveryValue");
					this.OndeliveryValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferValue", DbType="Decimal(10,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal transferValue
		{
			get
			{
				return this._transferValue;
			}
			set
			{
				if ((this._transferValue != value))
				{
					this.OntransferValueChanging(value);
					this.SendPropertyChanging();
					this._transferValue = value;
					this.SendPropertyChanged("transferValue");
					this.OntransferValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this.OnpersonChanging(value);
					this.SendPropertyChanging();
					this._person = value;
					this.SendPropertyChanged("person");
					this.OnpersonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delivery")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mId;
		
		private System.DateTime _time;
		
		private bool _isDone;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Package> _Package;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnisDoneChanging(bool value);
    partial void OnisDoneChanged();
    #endregion
		
		public Delivery()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDone", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool isDone
		{
			get
			{
				return this._isDone;
			}
			set
			{
				if ((this._isDone != value))
				{
					this.OnisDoneChanging(value);
					this.SendPropertyChanging();
					this._isDone = value;
					this.SendPropertyChanged("isDone");
					this.OnisDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Delivery", Storage="_Member", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Delivery.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Delivery.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Delivery", Storage="_Package", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Delivery.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Delivery.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Member = default(EntityRef<Member>);
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Error")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _introduction;
		
		private string _status;
		
		private EntityRef<Package> _Package;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnintroductionChanging(string value);
    partial void OnintroductionChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Error()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_introduction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string introduction
		{
			get
			{
				return this._introduction;
			}
			set
			{
				if ((this._introduction != value))
				{
					this.OnintroductionChanging(value);
					this.SendPropertyChanging();
					this._introduction = value;
					this.SendPropertyChanged("introduction");
					this.OnintroductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Error", Storage="_Package", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Error = null;
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Error = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leave")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lId;
		
		private string _mId;
		
		private string _reason;
		
		private short _status;
		
		private System.DateTime _time;
		
		private System.DateTime _srcTime;
		
		private System.DateTime _endTime;
		
		private string _view;
		
		private string _person;
		
		private EntityRef<Member> _Member;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlIdChanging(int value);
    partial void OnlIdChanged();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnsrcTimeChanging(System.DateTime value);
    partial void OnsrcTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    partial void OnviewChanging(string value);
    partial void OnviewChanged();
    partial void OnpersonChanging(string value);
    partial void OnpersonChanged();
    #endregion
		
		public Leave()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int lId
		{
			get
			{
				return this._lId;
			}
			set
			{
				if ((this._lId != value))
				{
					this.OnlIdChanging(value);
					this.SendPropertyChanging();
					this._lId = value;
					this.SendPropertyChanged("lId");
					this.OnlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srcTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime srcTime
		{
			get
			{
				return this._srcTime;
			}
			set
			{
				if ((this._srcTime != value))
				{
					this.OnsrcTimeChanging(value);
					this.SendPropertyChanging();
					this._srcTime = value;
					this.SendPropertyChanged("srcTime");
					this.OnsrcTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[view]", Storage="_view", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string view
		{
			get
			{
				return this._view;
			}
			set
			{
				if ((this._view != value))
				{
					this.OnviewChanging(value);
					this.SendPropertyChanging();
					this._view = value;
					this.SendPropertyChanged("view");
					this.OnviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this.OnpersonChanging(value);
					this.SendPropertyChanging();
					this._person = value;
					this.SendPropertyChanged("person");
					this.OnpersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Leave", Storage="_Member", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Leave.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Leave.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _account;
		
		private string _password;
		
		private bool _isDelete;
		
		private EntitySet<AddressBook> _AddressBook;
		
		private EntityRef<Member> _Member;
		
		private EntitySet<Package> _Package;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public Login()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_AddressBook", Storage="_AddressBook", ThisKey="account", OtherKey="account")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<AddressBook> AddressBook
		{
			get
			{
				if ((this.serializing 
							&& (this._AddressBook.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AddressBook;
			}
			set
			{
				this._AddressBook.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Member", Storage="_Member", ThisKey="account", OtherKey="mId", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public Member Member
		{
			get
			{
				if ((this.serializing 
							&& (this._Member.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Login = null;
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Login = this;
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Package", Storage="_Package", ThisKey="account", OtherKey="account")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Package> Package
		{
			get
			{
				if ((this.serializing 
							&& (this._Package.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Package;
			}
			set
			{
				this._Package.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressBook(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_AddressBook(AddressBook entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void attach_Package(Package entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Package(Package entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
		
		private void Initialize()
		{
			this._AddressBook = new EntitySet<AddressBook>(new Action<AddressBook>(this.attach_AddressBook), new Action<AddressBook>(this.detach_AddressBook));
			this._Member = default(EntityRef<Member>);
			this._Package = new EntitySet<Package>(new Action<Package>(this.attach_Package), new Action<Package>(this.detach_Package));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _mId;
		
		private string _name;
		
		private string _job;
		
		private bool _isDelete;
		
		private string _imagePath;
		
		private decimal _baseSalary;
		
		private EntitySet<Delivery> _Delivery;
		
		private EntitySet<Leave> _Leave;
		
		private EntitySet<Money> _Money;
		
		private EntitySet<PickUp> _PickUp;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntityRef<Login> _Login;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    partial void OnbaseSalaryChanging(decimal value);
    partial void OnbaseSalaryChanged();
    #endregion
		
		public Member()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseSalary", DbType="Decimal(10,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal baseSalary
		{
			get
			{
				return this._baseSalary;
			}
			set
			{
				if ((this._baseSalary != value))
				{
					this.OnbaseSalaryChanging(value);
					this.SendPropertyChanging();
					this._baseSalary = value;
					this.SendPropertyChanged("baseSalary");
					this.OnbaseSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Delivery", Storage="_Delivery", ThisKey="mId", OtherKey="mId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Delivery> Delivery
		{
			get
			{
				if ((this.serializing 
							&& (this._Delivery.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Delivery;
			}
			set
			{
				this._Delivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Leave", Storage="_Leave", ThisKey="mId", OtherKey="mId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Leave> Leave
		{
			get
			{
				if ((this.serializing 
							&& (this._Leave.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Leave;
			}
			set
			{
				this._Leave.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Money", Storage="_Money", ThisKey="mId", OtherKey="mId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Money> Money
		{
			get
			{
				if ((this.serializing 
							&& (this._Money.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Money;
			}
			set
			{
				this._Money.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PickUp", Storage="_PickUp", ThisKey="mId", OtherKey="mId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<PickUp> PickUp
		{
			get
			{
				if ((this.serializing 
							&& (this._PickUp.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PickUp;
			}
			set
			{
				this._PickUp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Transfer", Storage="_Transfer", ThisKey="mId", OtherKey="mId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				if ((this.serializing 
							&& (this._Transfer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Member", Storage="_Login", ThisKey="mId", OtherKey="account", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Member = null;
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Member = this;
						this._mId = value.account;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Delivery(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Delivery(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Leave(Leave entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Leave(Leave entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Money(Money entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Money(Money entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_PickUp(PickUp entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_PickUp(PickUp entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void Initialize()
		{
			this._Delivery = new EntitySet<Delivery>(new Action<Delivery>(this.attach_Delivery), new Action<Delivery>(this.detach_Delivery));
			this._Leave = new EntitySet<Leave>(new Action<Leave>(this.attach_Leave), new Action<Leave>(this.detach_Leave));
			this._Money = new EntitySet<Money>(new Action<Money>(this.attach_Money), new Action<Money>(this.detach_Money));
			this._PickUp = new EntitySet<PickUp>(new Action<PickUp>(this.attach_PickUp), new Action<PickUp>(this.detach_PickUp));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Money")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Money : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sId;
		
		private string _mId;
		
		private decimal _subsidy;
		
		private decimal _fine;
		
		private System.DateTime _time;
		
		private string _reason;
		
		private string _person;
		
		private EntityRef<Member> _Member;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsIdChanging(int value);
    partial void OnsIdChanged();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OnsubsidyChanging(decimal value);
    partial void OnsubsidyChanged();
    partial void OnfineChanging(decimal value);
    partial void OnfineChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OnpersonChanging(string value);
    partial void OnpersonChanged();
    #endregion
		
		public Money()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int sId
		{
			get
			{
				return this._sId;
			}
			set
			{
				if ((this._sId != value))
				{
					this.OnsIdChanging(value);
					this.SendPropertyChanging();
					this._sId = value;
					this.SendPropertyChanged("sId");
					this.OnsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subsidy", DbType="Decimal(10,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal subsidy
		{
			get
			{
				return this._subsidy;
			}
			set
			{
				if ((this._subsidy != value))
				{
					this.OnsubsidyChanging(value);
					this.SendPropertyChanging();
					this._subsidy = value;
					this.SendPropertyChanged("subsidy");
					this.OnsubsidyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine", DbType="Decimal(10,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal fine
		{
			get
			{
				return this._fine;
			}
			set
			{
				if ((this._fine != value))
				{
					this.OnfineChanging(value);
					this.SendPropertyChanging();
					this._fine = value;
					this.SendPropertyChanged("fine");
					this.OnfineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Date NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this.OnpersonChanging(value);
					this.SendPropertyChanging();
					this._person = value;
					this.SendPropertyChanged("person");
					this.OnpersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Money", Storage="_Member", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Money.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Money.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Package")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _weight;
		
		private decimal _price;
		
		private int _sendId;
		
		private int _receiverId;
		
		private string _Remarks;
		
		private string _account;
		
		private System.DateTime _time;
		
		private string _status;
		
		private bool _isDelete;
		
		private EntitySet<Delivery> _Delivery;
		
		private EntityRef<Error> _Error;
		
		private EntitySet<Path> _Path;
		
		private EntitySet<PickUp> _PickUp;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntityRef<AddressBook> _AddressBook;
		
		private EntityRef<AddressBook> _AddressBook1;
		
		private EntityRef<Login> _Login;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnsendIdChanging(int value);
    partial void OnsendIdChanged();
    partial void OnreceiverIdChanging(int value);
    partial void OnreceiverIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public Package()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(5,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(5,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sendId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int sendId
		{
			get
			{
				return this._sendId;
			}
			set
			{
				if ((this._sendId != value))
				{
					if (this._AddressBook.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsendIdChanging(value);
					this.SendPropertyChanging();
					this._sendId = value;
					this.SendPropertyChanged("sendId");
					this.OnsendIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int receiverId
		{
			get
			{
				return this._receiverId;
			}
			set
			{
				if ((this._receiverId != value))
				{
					if (this._AddressBook1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverIdChanging(value);
					this.SendPropertyChanging();
					this._receiverId = value;
					this.SendPropertyChanged("receiverId");
					this.OnreceiverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Delivery", Storage="_Delivery", ThisKey="id", OtherKey="id")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Delivery> Delivery
		{
			get
			{
				if ((this.serializing 
							&& (this._Delivery.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Delivery;
			}
			set
			{
				this._Delivery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Error", Storage="_Error", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public Error Error
		{
			get
			{
				if ((this.serializing 
							&& (this._Error.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Error.Entity;
			}
			set
			{
				Error previousValue = this._Error.Entity;
				if (((previousValue != value) 
							|| (this._Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Error.Entity = null;
						previousValue.Package = null;
					}
					this._Error.Entity = value;
					if ((value != null))
					{
						value.Package = this;
					}
					this.SendPropertyChanged("Error");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Path", Storage="_Path", ThisKey="id", OtherKey="id")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Path> Path
		{
			get
			{
				if ((this.serializing 
							&& (this._Path.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Path;
			}
			set
			{
				this._Path.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_PickUp", Storage="_PickUp", ThisKey="id", OtherKey="id")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<PickUp> PickUp
		{
			get
			{
				if ((this.serializing 
							&& (this._PickUp.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PickUp;
			}
			set
			{
				this._PickUp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Transfer", Storage="_Transfer", ThisKey="id", OtherKey="id")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				if ((this.serializing 
							&& (this._Transfer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_Package", Storage="_AddressBook", ThisKey="sendId", OtherKey="aId", IsForeignKey=true)]
		public AddressBook AddressBook
		{
			get
			{
				return this._AddressBook.Entity;
			}
			set
			{
				AddressBook previousValue = this._AddressBook.Entity;
				if (((previousValue != value) 
							|| (this._AddressBook.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressBook.Entity = null;
						previousValue.Package.Remove(this);
					}
					this._AddressBook.Entity = value;
					if ((value != null))
					{
						value.Package.Add(this);
						this._sendId = value.aId;
					}
					else
					{
						this._sendId = default(int);
					}
					this.SendPropertyChanged("AddressBook");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressBook_Package1", Storage="_AddressBook1", ThisKey="receiverId", OtherKey="aId", IsForeignKey=true)]
		public AddressBook AddressBook1
		{
			get
			{
				return this._AddressBook1.Entity;
			}
			set
			{
				AddressBook previousValue = this._AddressBook1.Entity;
				if (((previousValue != value) 
							|| (this._AddressBook1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressBook1.Entity = null;
						previousValue.Package1.Remove(this);
					}
					this._AddressBook1.Entity = value;
					if ((value != null))
					{
						value.Package1.Add(this);
						this._receiverId = value.aId;
					}
					else
					{
						this._receiverId = default(int);
					}
					this.SendPropertyChanged("AddressBook1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Package", Storage="_Login", ThisKey="account", OtherKey="account", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Package.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Package.Add(this);
						this._account = value.account;
					}
					else
					{
						this._account = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Delivery(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Delivery(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_PickUp(PickUp entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_PickUp(PickUp entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void Initialize()
		{
			this._Delivery = new EntitySet<Delivery>(new Action<Delivery>(this.attach_Delivery), new Action<Delivery>(this.detach_Delivery));
			this._Error = default(EntityRef<Error>);
			this._Path = new EntitySet<Path>(new Action<Path>(this.attach_Path), new Action<Path>(this.detach_Path));
			this._PickUp = new EntitySet<PickUp>(new Action<PickUp>(this.attach_PickUp), new Action<PickUp>(this.detach_PickUp));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._AddressBook = default(EntityRef<AddressBook>);
			this._AddressBook1 = default(EntityRef<AddressBook>);
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Path")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pId;
		
		private int _id;
		
		private int _srcId;
		
		private int _destId;
		
		private int _curId;
		
		private int _vId;
		
		private bool _isArrival;
		
		private System.DateTime _time;
		
		private EntityRef<Package> _Package;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Branch> _Branch1;
		
		private EntityRef<Branch> _Branch2;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpIdChanging(int value);
    partial void OnpIdChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsrcIdChanging(int value);
    partial void OnsrcIdChanged();
    partial void OndestIdChanging(int value);
    partial void OndestIdChanged();
    partial void OncurIdChanging(int value);
    partial void OncurIdChanged();
    partial void OnvIdChanging(int value);
    partial void OnvIdChanged();
    partial void OnisArrivalChanging(bool value);
    partial void OnisArrivalChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public Path()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int pId
		{
			get
			{
				return this._pId;
			}
			set
			{
				if ((this._pId != value))
				{
					this.OnpIdChanging(value);
					this.SendPropertyChanging();
					this._pId = value;
					this.SendPropertyChanged("pId");
					this.OnpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srcId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int srcId
		{
			get
			{
				return this._srcId;
			}
			set
			{
				if ((this._srcId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsrcIdChanging(value);
					this.SendPropertyChanging();
					this._srcId = value;
					this.SendPropertyChanged("srcId");
					this.OnsrcIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int destId
		{
			get
			{
				return this._destId;
			}
			set
			{
				if ((this._destId != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndestIdChanging(value);
					this.SendPropertyChanging();
					this._destId = value;
					this.SendPropertyChanged("destId");
					this.OndestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_curId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int curId
		{
			get
			{
				return this._curId;
			}
			set
			{
				if ((this._curId != value))
				{
					if (this._Branch2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurIdChanging(value);
					this.SendPropertyChanging();
					this._curId = value;
					this.SendPropertyChanged("curId");
					this.OncurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int vId
		{
			get
			{
				return this._vId;
			}
			set
			{
				if ((this._vId != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvIdChanging(value);
					this.SendPropertyChanging();
					this._vId = value;
					this.SendPropertyChanged("vId");
					this.OnvIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isArrival", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool isArrival
		{
			get
			{
				return this._isArrival;
			}
			set
			{
				if ((this._isArrival != value))
				{
					this.OnisArrivalChanging(value);
					this.SendPropertyChanging();
					this._isArrival = value;
					this.SendPropertyChanged("isArrival");
					this.OnisArrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Path", Storage="_Package", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Path.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Path.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path", Storage="_Branch", ThisKey="srcId", OtherKey="bId", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Path.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Path.Add(this);
						this._srcId = value.bId;
					}
					else
					{
						this._srcId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path1", Storage="_Branch1", ThisKey="destId", OtherKey="bId", IsForeignKey=true)]
		public Branch Branch1
		{
			get
			{
				return this._Branch1.Entity;
			}
			set
			{
				Branch previousValue = this._Branch1.Entity;
				if (((previousValue != value) 
							|| (this._Branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch1.Entity = null;
						previousValue.Path1.Remove(this);
					}
					this._Branch1.Entity = value;
					if ((value != null))
					{
						value.Path1.Add(this);
						this._destId = value.bId;
					}
					else
					{
						this._destId = default(int);
					}
					this.SendPropertyChanged("Branch1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Path2", Storage="_Branch2", ThisKey="curId", OtherKey="bId", IsForeignKey=true)]
		public Branch Branch2
		{
			get
			{
				return this._Branch2.Entity;
			}
			set
			{
				Branch previousValue = this._Branch2.Entity;
				if (((previousValue != value) 
							|| (this._Branch2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch2.Entity = null;
						previousValue.Path2.Remove(this);
					}
					this._Branch2.Entity = value;
					if ((value != null))
					{
						value.Path2.Add(this);
						this._curId = value.bId;
					}
					else
					{
						this._curId = default(int);
					}
					this.SendPropertyChanged("Branch2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Path", Storage="_Vehicle", ThisKey="vId", OtherKey="vId", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Path.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Path.Add(this);
						this._vId = value.vId;
					}
					else
					{
						this._vId = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Package = default(EntityRef<Package>);
			this._Branch = default(EntityRef<Branch>);
			this._Branch1 = default(EntityRef<Branch>);
			this._Branch2 = default(EntityRef<Branch>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PickUp")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PickUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mId;
		
		private System.DateTime _time;
		
		private bool _isDone;
		
		private EntityRef<Package> _Package;
		
		private EntityRef<Member> _Member;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnisDoneChanging(bool value);
    partial void OnisDoneChanged();
    #endregion
		
		public PickUp()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDone", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool isDone
		{
			get
			{
				return this._isDone;
			}
			set
			{
				if ((this._isDone != value))
				{
					this.OnisDoneChanging(value);
					this.SendPropertyChanging();
					this._isDone = value;
					this.SendPropertyChanged("isDone");
					this.OnisDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_PickUp", Storage="_Package", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.PickUp.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.PickUp.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_PickUp", Storage="_Member", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.PickUp.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.PickUp.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Package = default(EntityRef<Package>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mId;
		
		private System.DateTime _time;
		
		private bool _isDone;
		
		private EntityRef<Package> _Package;
		
		private EntityRef<Member> _Member;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmIdChanging(string value);
    partial void OnmIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnisDoneChanging(bool value);
    partial void OnisDoneChanged();
    #endregion
		
		public Transfer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string mId
		{
			get
			{
				return this._mId;
			}
			set
			{
				if ((this._mId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmIdChanging(value);
					this.SendPropertyChanging();
					this._mId = value;
					this.SendPropertyChanged("mId");
					this.OnmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDone", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool isDone
		{
			get
			{
				return this._isDone;
			}
			set
			{
				if ((this._isDone != value))
				{
					this.OnisDoneChanging(value);
					this.SendPropertyChanging();
					this._isDone = value;
					this.SendPropertyChanged("isDone");
					this.OnisDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Transfer", Storage="_Package", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Transfer", Storage="_Member", ThisKey="mId", OtherKey="mId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._mId = value.mId;
					}
					else
					{
						this._mId = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Package = default(EntityRef<Package>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vId;
		
		private string _type;
		
		private bool _isDelete;
		
		private bool _onDuty;
		
		private string _plateNumber;
		
		private EntitySet<Path> _Path;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvIdChanging(int value);
    partial void OnvIdChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    partial void OnonDutyChanging(bool value);
    partial void OnonDutyChanged();
    partial void OnplateNumberChanging(string value);
    partial void OnplateNumberChanged();
    #endregion
		
		public Vehicle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int vId
		{
			get
			{
				return this._vId;
			}
			set
			{
				if ((this._vId != value))
				{
					this.OnvIdChanging(value);
					this.SendPropertyChanging();
					this._vId = value;
					this.SendPropertyChanged("vId");
					this.OnvIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onDuty", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool onDuty
		{
			get
			{
				return this._onDuty;
			}
			set
			{
				if ((this._onDuty != value))
				{
					this.OnonDutyChanging(value);
					this.SendPropertyChanging();
					this._onDuty = value;
					this.SendPropertyChanged("onDuty");
					this.OnonDutyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string plateNumber
		{
			get
			{
				return this._plateNumber;
			}
			set
			{
				if ((this._plateNumber != value))
				{
					this.OnplateNumberChanging(value);
					this.SendPropertyChanging();
					this._plateNumber = value;
					this.SendPropertyChanged("plateNumber");
					this.OnplateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Path", Storage="_Path", ThisKey="vId", OtherKey="vId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Path> Path
		{
			get
			{
				if ((this.serializing 
							&& (this._Path.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Path;
			}
			set
			{
				this._Path.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Path(Path entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void Initialize()
		{
			this._Path = new EntitySet<Path>(new Action<Path>(this.attach_Path), new Action<Path>(this.detach_Path));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
